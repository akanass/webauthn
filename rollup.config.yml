- input:
    - static/ts/login.ts
  output:
    - dir: public/js
      format: es
      entryFileNames: '[format]/[name]-[hash].min.mjs'
      chunkFileNames: '[format]/[name]-[hash].min.mjs'
    - dir: public/js
      format: system
      entryFileNames: '[format]/[name]-[hash].min.js'
      chunkFileNames: '[format]/[name]-[hash].min.js'
  plugins:
    - name: del
      api:
        targets: public/js/{es,system}/*.{js,mjs}
    - name: typescript
      api:
        tsconfig: tsconfig.browser.json
    - name: commonjs
    - name: nodeResolve
      api:
        mainFields:
          - jsnext:main
          - module
          - main
    - name: json
    - name: terser
    - name: metadata
- input: static/js/vendor.js
  output:
    dir: public/js
    format: iife
    entryFileNames: '[name]-[hash].min.js'
  plugins:
    - name: del
      api:
        targets: public/js/vendor*
    - name: commonjs
    - name: nodeResolve
      api:
        mainFields:
          - jsnext:main
          - module
          - main
    - name: json
    - name: terser
    - name: metadata
- input: static/scss/style.scss
  output:
    dir: public/css
    assetFileNames: '[name]-[hash][extname]'
  plugins:
    - name: del
      api:
        targets: public/css/*
    - name: styles
      api:
        mode: extract
        sass:
          impl: sass
          fibers: false
          sync: true
        minimize: true
    - name: del
      api:
        targets: public/css/*.js
        hook: writeBundle
    - name: metadata
